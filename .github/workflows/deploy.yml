name: Deploy Terraform ALB-ASG Infra

on:
  push:
    branches:
      - feature-a

  pull_request:
    types: [closed]
    branches:
      - main
      - feature-b

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_STATE_BUCKET_NAME: ${{ secrets.AWS_TF_STATE_BUCKET_NAME }}
  PUBLIC_SSH_KEY: ${{ secrets.AWS_SSH_KEY_PUBLIC }}
  AWS_REGION: us-east-1

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform fmt
        run: terraform fmt -check
        working-directory: ./infrastructure
      - name: Terraform fmt validation
        run: terraform validate
        working-directory: ./infrastructure

  plan:
    needs: lint
    runs-on: ubuntu-latest
    if: github.ref == "refs/heads/feature-a"
    steps:
      - name: Code Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform init
        run: terraform init -backend-config="bucket=$TF_STATE_BUCKET_NAME"
        working-directory: ./infrastructure
      - name: Terraform plan
        working-directory: ./infrastructure
        run: |
          terraform plan \
          -var-file=terraform.tfvars \
          -var="public_key=$PUBLIC_SSH_KEY" \
          -out=tf.plan
      - uses: actions/upload-artifact@v2
        with:
          name: tfplan
          path: tf.plan

  apply:
    needs: plan
    runs-on: ubuntu-latest
    if: |
      github.ref == 'main' &&
      github.event.pull_request.merged == true
    steps:
      - name: Code Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform init
        run: terraform init -backend-config="bucket=$TF_STATE_BUCKET_NAME"
        working-directory: ./infrastructure
      - name: Terraform Apply
        working-directory: ./infrastructure
        run: |
          terraform apply \
          -auto-approve \
          -var-file=terraform.tfvars \
          -var="public_key=$PUBLIC_SSH_KEY" \

  destroy:
    runs-on: ubuntu-latest
    if: |
      github.ref == 'feature-b' &&
      github.event.pull_request.merged == true
    steps:
      - name: Code Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform init
        run: terraform init -backend-config="bucket=$TF_STATE_BUCKET_NAME"
        working-directory: ./infrastructure
      - name: Terraform Destroy
        working-directory: ./infrastructure
        run: |
          terraform destroy \ 
          -auto-approve \
          -var-file=terraform.tfvars \
          -var="public_key=$PUBLIC_SSH_KEY" \
